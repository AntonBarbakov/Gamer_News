/**
  Normalize box-sizing for all elements
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
    Delete inner padding for ul and ol,
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
/**
    Reset margins for the document body and for blockquote, figure and fieldset
    elements that have a class attribute
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
    Remove vertical margins for selected tags that have a class attribute
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
    Remove default marker from unordered lists that have a class attribute
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
    Reset vertical margins for paragraphs; declare a local variable for bottom margin
    to avoid interaction with a more complex selector
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
    Bottom margin for paragraphs without a class attribute that are not the last among their siblings
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
    Simplify handling of images and video
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
    Inherit font properties for input controls
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
      Useful in most situations (e.g. to stick a footer to the bottom of the page)
   */
  height: 100%;
  /**
      Prevent horizontal layout shift when the scrollbar appears or disappears
   */
  scrollbar-gutter: stable;
}

/**
    Smooth scrolling
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
      Useful in most situations (e.g. to stick a footer to the bottom of the page)
   */
  min-height: 100%;
  /**
      Consistent line height
   */
  line-height: 1.5;
}

/**
    Normalize link element height when inspected in DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
    Pointer cursor for interactive elements
 */
button,
label {
  cursor: pointer;
}

/**
    Normalize color of SVG elements
    (except those with fill="none" or fill starting with "url")
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
    Normalize stroke color of SVG elements
    (except those with stroke="none" or stroke starting with "url")
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
    Fix delay in color change when interacting with SVG elements
 */
svg * {
  transition-property: fill, stroke;
}

/**
    Set table borders to the classic 'collapse' model
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
    Disable all animations and transitions for users who prefer reduced motion
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Kumbh Sans";
  src: url("../fonts/KumbhSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
body {
  background-color: darkseagreen;
}
body p {
  color: red;
}

/*# sourceMappingURL=main.css.map */
